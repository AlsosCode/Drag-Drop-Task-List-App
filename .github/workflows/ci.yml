name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-frontend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      run: npm ci
      working-directory: frontend

    - name: Run frontend tests
      run: npm test
      working-directory: frontend

    - name: Build frontend
      run: npm run build
      working-directory: frontend

  test-backend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install backend dependencies
      run: npm ci
      working-directory: backend

    - name: Start backend server
      run: |
        npm start &
        sleep 5
      working-directory: backend

    - name: Health check
      run: curl --fail http://localhost:4000/api/health || exit 1

  docker-build:
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]

    steps:
    - uses: actions/checkout@v3

    - name: Build frontend Docker image
      run: docker build -t drag-drop-frontend ./frontend

    - name: Build backend Docker image
      run: docker build -t drag-drop-backend ./backend
